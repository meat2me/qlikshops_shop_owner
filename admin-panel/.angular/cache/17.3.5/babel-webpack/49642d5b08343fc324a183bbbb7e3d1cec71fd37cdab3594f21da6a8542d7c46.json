{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"ng-apexcharts\";\nconst _c0 = [\"chart\"];\nexport let RateChartComponent = /*#__PURE__*/(() => {\n  class RateChartComponent {\n    constructor(translateService) {\n      this.translateService = translateService;\n      this.clientsData = [];\n      this.ordersData = [];\n      this.month = [];\n      this.chartOptions = {\n        series: [{\n          name: 'Clients per month',\n          data: this.clientsData\n        }, {\n          name: 'Orders per month',\n          data: this.ordersData\n        }],\n        chart: {\n          type: 'bar',\n          height: 350,\n          toolbar: {\n            show: false\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        xaxis: {\n          categories: this.month\n        },\n        fill: {\n          opacity: 1\n        }\n      };\n    }\n    ngOnInit() {\n      if (this.clients) {\n        this.month = this.clients.map(x => x.month);\n        this.clientsData = this.clients.map(x => x.amount);\n      }\n      if (this.orders) {\n        this.ordersData = this.orders.map(x => x.amount);\n      }\n      this.chartOptions.series = [{\n        name: this.translateService.instant('dashboard.client_per_month'),\n        data: this.clientsData\n      }, {\n        name: this.translateService.instant('dashboard.order_per_month'),\n        data: this.ordersData\n      }];\n      this.chartOptions.xaxis = {\n        categories: this.month\n      };\n    }\n    static #_ = this.ɵfac = function RateChartComponent_Factory(t) {\n      return new (t || RateChartComponent)(i0.ɵɵdirectiveInject(i1.TranslateService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RateChartComponent,\n      selectors: [[\"app-rate-chart\"]],\n      viewQuery: function RateChartComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n        }\n      },\n      inputs: {\n        clients: \"clients\",\n        orders: \"orders\"\n      },\n      decls: 2,\n      vars: 9,\n      consts: [[\"id\", \"chart\"], [3, \"series\", \"chart\", \"dataLabels\", \"plotOptions\", \"legend\", \"fill\", \"stroke\", \"tooltip\", \"xaxis\"]],\n      template: function RateChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"apx-chart\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"series\", ctx.chartOptions.series)(\"chart\", ctx.chartOptions.chart)(\"dataLabels\", ctx.chartOptions.dataLabels)(\"plotOptions\", ctx.chartOptions.plotOptions)(\"legend\", ctx.chartOptions.legend)(\"fill\", ctx.chartOptions.fill)(\"stroke\", ctx.chartOptions.stroke)(\"tooltip\", ctx.chartOptions.tooltip)(\"xaxis\", ctx.chartOptions.xaxis);\n        }\n      },\n      dependencies: [i2.ChartComponent],\n      styles: [\"#chart[_ngcontent-%COMP%]{max-width:80%;margin:35px auto}\"]\n    });\n  }\n  return RateChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}