{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nconst LANGUAGE_KEY = 'QLIKS_LANGUAGE';\nexport let TranslatedService = /*#__PURE__*/(() => {\n  class TranslatedService {\n    constructor(translateService) {\n      this.translateService = translateService;\n      this.languageObservable = new BehaviorSubject('he');\n      this.translateService.addLangs(['he']);\n      this.translateService.onLangChange.subscribe(this.changeLanguage.bind(this));\n      this.translateService.setDefaultLang('he');\n      this.translateService.use('he');\n    }\n    changeLanguage({\n      lang\n    }) {\n      this.translateService.use(lang);\n      this.languageObservable.next(lang);\n      this.storedLanguage = lang;\n    }\n    get storedLanguage() {\n      return localStorage.getItem(LANGUAGE_KEY);\n    }\n    set storedLanguage(value) {\n      localStorage.setItem(LANGUAGE_KEY, value);\n    }\n    getCurrentLanguage() {\n      return this.translateService.currentLang;\n    }\n    static #_ = this.ɵfac = function TranslatedService_Factory(t) {\n      return new (t || TranslatedService)(i0.ɵɵinject(i1.TranslateService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TranslatedService,\n      factory: TranslatedService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TranslatedService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}