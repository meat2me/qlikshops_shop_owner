{"ast":null,"code":"import { selectAuthState } from '@core/redux/app.states';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngrx/store\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(_authService, _router, store) {\n      this._authService = _authService;\n      this._router = _router;\n      this.store = store;\n      this.store.select(selectAuthState).subscribe(state => {\n        if (state.isAuthenticated) {\n          this.user = state;\n        } else {\n          this.user = null;\n        }\n      });\n    }\n    canActivate(next, state) {\n      // navigate to login page\n      if (this.user) {\n        return true;\n      }\n      this._router.navigate(['/auth/login']);\n      return false;\n    }\n    static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.Store));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac\n    });\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}