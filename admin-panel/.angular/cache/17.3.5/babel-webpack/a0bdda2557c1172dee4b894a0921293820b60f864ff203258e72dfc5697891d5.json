{"ast":null,"code":"import { map, tap } from 'rxjs/operators';\nimport { BaseService } from './base.service';\nimport { ReplaySubject } from 'rxjs';\nimport { fromObjWithNum } from 'app/utils/from-obj';\nimport * as i0 from \"@angular/core\";\nexport let ItemService = /*#__PURE__*/(() => {\n  class ItemService extends BaseService {\n    constructor() {\n      super(...arguments);\n      this.ownerItemsSubj = new ReplaySubject(1);\n      this.itemValidValuesSubj = new ReplaySubject(1);\n    }\n    getOwnerItem(item_id, store_id) {\n      let storeId;\n      this.store_id == null ? storeId = store_id : storeId = this.store_id;\n      return this.post({\n        item_id,\n        request: 'owner_get_item',\n        store_id: storeId\n      }).pipe(tap(res => {\n        res.valid_values = this.convertValidValue(res.valid_values);\n      }));\n    }\n    getOwnerItems(store_id) {\n      let storeId;\n      this.store_id == null ? storeId = store_id : storeId = this.store_id;\n      this.post({\n        request: 'owner_get_items',\n        store_id: storeId\n      }).subscribe(res => this.ownerItemsSubj.next(res), err => this.ownerItemsSubj.error(err));\n      return this.ownerItems$ || (this.ownerItems$ = this.ownerItemsSubj.asObservable());\n    }\n    getAdminItem(item_id) {\n      return this.post({\n        item_id,\n        request: 'admin_get_item'\n      }).pipe(tap(res => {\n        res.valid_values = this.convertValidValue(res.valid_values);\n      }));\n    }\n    getAdminItems() {\n      this.post({\n        request: 'admin_get_items'\n      }).subscribe(res => this.ownerItemsSubj.next(res), err => this.ownerItemsSubj.error(err));\n      return this.ownerItems$ || (this.ownerItems$ = this.ownerItemsSubj.asObservable());\n    }\n    getItemValidValues() {\n      this.post({\n        request: 'get_item_valid_values'\n      }).pipe(map(this.convertValidValue)).subscribe(this.itemValidValuesSubj);\n      return this.itemValidValues$ || (this.itemValidValues$ = this.itemValidValuesSubj.asObservable());\n    }\n    addItem(req) {\n      return this.post({\n        ...req,\n        request: 'add_item'\n      });\n    }\n    updateItem(req) {\n      return this.post({\n        ...req,\n        request: 'update_item'\n      });\n    }\n    deleteItem(item_id) {\n      return this.post({\n        request: 'delete_item',\n        item_id\n      });\n    }\n    setStoreItem(req, store_id) {\n      let storeId;\n      this.store_id == null ? storeId = store_id : storeId = this.store_id;\n      return this.post({\n        ...req,\n        request: 'set_store_item',\n        store_id: storeId\n      });\n    }\n    setOwnerItemInStock(req, store_id) {\n      let storeId;\n      this.store_id == null ? storeId = store_id : storeId = this.store_id;\n      return this.post({\n        ...req,\n        request: 'owner_set_item_in_stock',\n        store_id: storeId\n      });\n    }\n    setAdminItemInStock(req) {\n      return this.post({\n        ...req,\n        request: 'admin_set_item_in_stock'\n      });\n    }\n    convertValidValue(o) {\n      const a = o;\n      a.promotion_templates = fromObjWithNum(o.promotion_templates);\n      a.units = fromObjWithNum(o.units);\n      return a;\n    }\n    static #_ = this.ɵfac = /*@__PURE__*/(() => {\n      let ɵItemService_BaseFactory;\n      return function ItemService_Factory(t) {\n        return (ɵItemService_BaseFactory || (ɵItemService_BaseFactory = i0.ɵɵgetInheritedFactory(ItemService)))(t || ItemService);\n      };\n    })();\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ItemService,\n      factory: ItemService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ItemService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}