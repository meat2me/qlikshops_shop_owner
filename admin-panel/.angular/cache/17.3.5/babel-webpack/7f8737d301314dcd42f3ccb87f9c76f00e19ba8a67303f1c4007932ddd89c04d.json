{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport let TrueFalseValueDirective = /*#__PURE__*/(() => {\n  class TrueFalseValueDirective {\n    onChange(ev) {\n      this.propagateTouch(true);\n      this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n    }\n    constructor(elementRef, renderer) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.trueValue = true;\n      this.falseValue = false;\n      this.disabled = false;\n    }\n    registerOnTouched(fn) {\n      this.propagateTouch = fn;\n      // throw new Error('Method not implemented.');\n    }\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      // throw new Error(\"Method not implemented.\");\n    }\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n    writeValue(obj) {\n      if (obj === this.trueValue) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\n      } else {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\n      }\n    }\n    static #_ = this.ɵfac = function TrueFalseValueDirective_Factory(t) {\n      return new (t || TrueFalseValueDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: TrueFalseValueDirective,\n      selectors: [[\"\", \"trueFalseValue\", \"\"]],\n      hostVars: 1,\n      hostBindings: function TrueFalseValueDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function TrueFalseValueDirective_change_HostBindingHandler($event) {\n            return ctx.onChange($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        trueValue: \"trueValue\",\n        falseValue: \"falseValue\"\n      },\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => TrueFalseValueDirective),\n        multi: true\n      }])]\n    });\n  }\n  return TrueFalseValueDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}