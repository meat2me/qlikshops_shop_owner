{"ast":null,"code":"import { AlertModalComponent } from '@modals/alert-modal/alert-modal.component';\nimport { ConfirmModalComponent } from '@modals/confirm-modal/confirm-modal.component';\nimport { NotifyModalComponent } from '@modals/notify-modal/notify-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nexport let AlertService = /*#__PURE__*/(() => {\n  class AlertService {\n    constructor(modalServ) {\n      this.modalServ = modalServ;\n    }\n    showConfirmChanges() {\n      return this.showConfirm('modal.confirm_to_save_title', 'modal.confirm_to_save_content', true);\n    }\n    showDiscardChanges() {\n      return this.showConfirm('modal.cancel_change_title', 'modal.cancel_change_content', true);\n    }\n    showChangedSuccess(title = 'modal.changed_save_success_title', content = 'modal.changed_save_success_content') {\n      return this.showNotification(title, content);\n    }\n    showDeleteSuccess(title = 'modal.delete_item_success_title', content = 'modal.delete_item_success_content') {\n      return this.showNotification(title, content);\n    }\n    showPremiumFeature() {\n      return this.showNotification('modal.premium_title', 'modal.premium_content');\n    }\n    showConfirm(title, content, isNotDanger = false, options = {\n      centered: true\n    }) {\n      const modal = this.modalServ.open(ConfirmModalComponent, options);\n      const component = modal.componentInstance;\n      component.title = title;\n      component.content = content;\n      component.type = isNotDanger;\n      return modal.result;\n    }\n    showAlert(errorTitle, errorMsg, options = {\n      centered: true\n    }) {\n      const modal = this.modalServ.open(AlertModalComponent, options);\n      const component = modal.componentInstance;\n      component.title = errorTitle;\n      component.content = errorMsg || errorTitle;\n      return modal.result;\n    }\n    showInfo(title, content, options = {\n      centered: true\n    }) {\n      return this.showConfirm(title, content || title, true, options);\n    }\n    showNotification(title, content, options = {\n      centered: true\n    }) {\n      const modal = this.modalServ.open(NotifyModalComponent, options);\n      const component = modal.componentInstance;\n      component.title = title;\n      component.content = content;\n      return modal.result;\n    }\n    static #_ = this.ɵfac = function AlertService_Factory(t) {\n      return new (t || AlertService)(i0.ɵɵinject(i1.NgbModal));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AlertService,\n      factory: AlertService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AlertService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}