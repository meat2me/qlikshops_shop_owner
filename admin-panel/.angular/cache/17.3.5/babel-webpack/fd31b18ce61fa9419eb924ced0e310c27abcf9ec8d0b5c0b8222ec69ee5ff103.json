{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../category-accordion/category-accordion.component\";\nfunction CategoryListComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-category-accordion\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const cat_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"selected\", ctx_r1.selectedItem)(\"selectEmitter\", ctx_r1.selectedItemChange)(\"cat\", cat_r1)(\"isRecipe\", ctx_r1.isRecipe);\n  }\n}\nexport let CategoryListComponent = /*#__PURE__*/(() => {\n  class CategoryListComponent {\n    constructor() {\n      this.selectedItemChange = new EventEmitter();\n    }\n    ngOnInit() {}\n    static #_ = this.ɵfac = function CategoryListComponent_Factory(t) {\n      return new (t || CategoryListComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryListComponent,\n      selectors: [[\"app-category-list\"]],\n      inputs: {\n        data: \"data\",\n        selectedItem: \"selectedItem\",\n        isRecipe: \"isRecipe\"\n      },\n      outputs: {\n        selectedItemChange: \"selectedItemChange\"\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"selected\", \"selectEmitter\", \"cat\", \"isRecipe\"]],\n      template: function CategoryListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, CategoryListComponent_ng_container_0_Template, 2, 4, \"ng-container\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.data);\n        }\n      },\n      dependencies: [i1.NgForOf, i2.CategoryAccordionComponent]\n    });\n  }\n  return CategoryListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}