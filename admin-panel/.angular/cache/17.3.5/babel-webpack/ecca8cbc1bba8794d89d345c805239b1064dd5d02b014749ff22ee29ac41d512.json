{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport { BaseService } from './base.service';\nimport * as i0 from \"@angular/core\";\nexport let OrderService = /*#__PURE__*/(() => {\n  class OrderService extends BaseService {\n    constructor() {\n      super(...arguments);\n      this.openOrderSubj = new ReplaySubject(1);\n      this.readySubj = new ReplaySubject(1);\n    }\n    getOpenOrders() {\n      this.post({\n        request: 'get_open_orders'\n      }).subscribe(res => this.openOrderSubj.next(res));\n      return this.openOrder$ || (this.openOrder$ = this.openOrderSubj.asObservable());\n    }\n    getReadyOrders(filter_delivery_type) {\n      this.post({\n        request: 'get_ready_orders',\n        filter_delivery_type\n      }).subscribe(res => this.readySubj.next(res));\n      return this.readyOrders$ || (this.readyOrders$ = this.readySubj.asObservable());\n    }\n    getOrderDetail(order_id) {\n      return this.post({\n        request: 'get_order_details',\n        order_id\n      });\n    }\n    getHistoryByRange(filter_from_date, filter_to_date, filter_search) {\n      return this.post({\n        request: 'get_closed_orders',\n        filter_from_date,\n        filter_to_date,\n        filter_search\n      });\n    }\n    sendMsg(client_id, message) {\n      return this.post({\n        request: 'send_message_to_client',\n        client_id,\n        message\n      });\n    }\n    setStatus(order_id, status) {\n      return this.post({\n        request: 'set_order_status',\n        order_id,\n        status\n      });\n    }\n    setProcess(order_id, item_id, is_processed) {\n      return this.post({\n        request: 'set_order_item_processed',\n        order_id,\n        item_id,\n        is_processed\n      });\n    }\n    setAmount(order_id, item_id, amount) {\n      return this.post({\n        request: 'set_order_item_amount',\n        order_id,\n        item_id,\n        amount\n      });\n    }\n    setOrderReady(order_id, actual_cost) {\n      return this.post({\n        request: 'set_order_ready',\n        order_id,\n        actual_cost\n      });\n    }\n    static #_ = this.ɵfac = /*@__PURE__*/(() => {\n      let ɵOrderService_BaseFactory;\n      return function OrderService_Factory(t) {\n        return (ɵOrderService_BaseFactory || (ɵOrderService_BaseFactory = i0.ɵɵgetInheritedFactory(OrderService)))(t || OrderService);\n      };\n    })();\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: OrderService,\n      factory: OrderService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return OrderService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}