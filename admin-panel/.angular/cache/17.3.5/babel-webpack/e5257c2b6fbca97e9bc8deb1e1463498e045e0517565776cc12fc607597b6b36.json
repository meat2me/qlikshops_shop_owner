{"ast":null,"code":"const defaultOptions = {\n  fields: []\n};\nexport class LocalSearcher {\n  constructor(documents = [], options = defaultOptions) {\n    this.documents = documents;\n    this.options = options;\n    this.result = [];\n    this.init(documents, options);\n  }\n  init(documents, opt) {\n    this.result = documents;\n    this.documents = documents;\n    this.options = {\n      ...defaultOptions,\n      ...opt\n    };\n  }\n  reset() {\n    return this.result = this.documents;\n  }\n  search(term) {\n    term = term.trim().toLowerCase();\n    if (term === '') {\n      return this.result = this.documents;\n    }\n    const {\n      fields\n    } = this.options;\n    return this.result = this.documents.filter(d => {\n      for (const f of fields) {\n        if (f == 'categories') {\n          for (const category of d[f]) {\n            if (category.category_name?.toLowerCase().includes(term)) {\n              return true;\n            }\n          }\n        } else {\n          if (d[f]?.toLowerCase().includes(term)) {\n            return true;\n          }\n        }\n      }\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}