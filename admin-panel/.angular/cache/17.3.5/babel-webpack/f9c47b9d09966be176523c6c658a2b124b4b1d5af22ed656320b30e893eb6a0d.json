{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let LoadingInterceptor = /*#__PURE__*/(() => {\n  class LoadingInterceptor {\n    constructor() {}\n    intercept(request, next) {\n      const params = request.params;\n      if (!params.preventLoading) {\n        // this.ngxSpinnerService.show();\n      }\n      return next.handle(request).pipe(finalize(() => {\n        if (!params.preventLoading && !params.keepLoading) {\n          // this.ngxSpinnerService.hide();\n        }\n      }));\n    }\n    static #_ = this.ɵfac = function LoadingInterceptor_Factory(t) {\n      return new (t || LoadingInterceptor)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingInterceptor,\n      factory: LoadingInterceptor.ɵfac\n    });\n  }\n  return LoadingInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}