{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { StoreComponent } from './store.component';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { TableFooterModule } from '@components/table-footer/table-footer.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgbAccordionModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: StoreComponent\n}, {\n  path: 'add-store',\n  loadChildren: () => import('@routes/add-store/add-store.module').then(mod => mod.AddStoreModule),\n  data: {\n    breadcrumb: 'navigation.add_store',\n    usePrevUrl: false\n  }\n}];\nexport let StoreModule = /*#__PURE__*/(() => {\n  class StoreModule {\n    static #_ = this.ɵfac = function StoreModule_Factory(t) {\n      return new (t || StoreModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: StoreModule\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [CommonModule, FormsModule, TableFooterModule, NgxPaginationModule, TranslateModule, NgbAccordionModule, RouterModule.forChild(routes)]\n    });\n  }\n  return StoreModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}